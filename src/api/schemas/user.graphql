type User {
    _id: ID!
    username: String!
    email: String!
    profile: String
    nickname: String
    profile_color: String!
    favorite_song: Song
    favorite_album: Album
}

type TokenMessage {
    token: String
    message: String!
    user: User!
}

input Credentials {
    username: String!
    password: String!
}

input UserInput {
    username: String!
    email: String!
    password: String!
}

input UserModify {
    email: String
    password: String
    nickname: String
    profile_color: String
    favorite_song: ID
    favorite_album: ID
}

input AdminModify {
    username: String
    email: String
    password: String
    nickname: String
    profile_color: String
    favorite_song: String
    favorite_album: String
}

type Query {
    userSearch(username: String!): [User]
    userFromToken: User
    user(_id: ID!): User
    userGetRole: String
    userIsFollowing(_id: ID!): Boolean
}

type Mutation {
    register(user: UserInput!): TokenMessage
    login(credentials: Credentials!): TokenMessage
    userUpdate(user: UserModify!): TokenMessage
    userUpdateByID(_id: ID!, user: AdminModify!): TokenMessage
    userChangeRole(_id: ID!, role: String!): TokenMessage
    userDelete: TokenMessage
    userDeleteByID(_id: ID!): TokenMessage
}
